# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.config/oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="robbyrussell"

ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git gh asdf zsh-autosuggestions zsh-syntax-highlighting zoxide virtualenv nvm docker docker-compose command-not-found)




source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

################################################
# Keychain
################################################
# Keychain is a program designed to help you easily manage your SSH keys
# with minimal user interaction. It is implemented as a shell script
# which drives both ssh-agent and ssh-add.
# eval $(keychain --eval --quiet id_ed25519 id_rsa ~/.keys/my_custom_key)
# eval $(keychain --eval --quiet id_ed25519)
# eval $(keychain --eval --quiet --agents ssh --noask --inherit any id_ed25519)
eval $(keychain --eval --quiet --agents ssh --noask id_ed25519)


################################################
# Tmuxp settings
################################################
# tmxup autocompletion for v 1.16
# eval "$(_TMUXP_COMPLETE=zsh_source tmuxp)"
# tmxup autocompletion for v 1.17+ but experimental
# shtab --shell=zsh -u tmuxp.cli.create_parser \
  # | sudo tee /usr/local/share/zsh/site-functions/_TMUXP
export DISABLE_AUTO_TITLE='true'


################################################
### User custom setting ########################
################################################

# Vim mode for command line
bindkey jj vi-cmd-mode

# chezmoi function to change the directory instead of spawning a new shell
chezmoi-cd() {
    cd $(chezmoi source-path)
}

# setting default editor
export VISUAL="vim"
export EDITOR="$VISUAL"

# # Pyenv setting
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"
#
# # Haskel settings
# [ -f "/home/saif/.ghcup/env" ] && source "/home/saif/.ghcup/env" # ghcup-env


# temporary fix for egrep: warning: egrep is obsolescent; using grep -E
# commenting out below line
# source /usr/bin/virtualenvwrapper.sh

# source $(dirname $(gem which colorls))/tab_complete.sh


# Settings for pipenvwrapper
# pipenvwrapper is to pipenv, what virtualenvwrapper
# is to virtualenv
# export WORKON_HOME=$HOME/.virtualenvs
# export PROJECT_HOME=$HOME/Projects
# source $HOME/pipenvwrapper/pipenvwrapper.sh

# Paths
# export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
# export PATH="$PATH:$(ruby -e 'puts Gem.user_dir')/bin"
# export PATH="/home/$USER/bin:$PATH"

# Paths for Android
# export ANDROID_HOME=$HOME/Android/Sdk
# export PATH=$PATH:$ANDROID_HOME/emulator
# export PATH=$PATH:$ANDROID_HOME/tools
# export PATH=$PATH:$ANDROID_HOME/tools/bin
# export PATH=$PATH:$ANDROID_HOME/platform-tools


################################################
######### neovim ###############################
################################################
# alias nvim-lazy="NVIM_APPNAME=LazyNvim nvim"

# alias nvim-kick="NVIM_APPNAME=kickstart nvim"
# alias nvim-chad="NVIM_APPNAME=NvChad nvim"
# alias nvim-astro="NVIM_APPNAME=AstroNvim nvim"

# function nvims() {
#   # items=("default" "kickstart" "LazyVim" "NvChad" "AstroNvim")
#   items=("default" "LazyNvim")
#   config=$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=~50% --layout=reverse --border --exit-0)
#   if [[ -z $config ]]; then
#     echo "Nothing selected"
#     return 0
#   elif [[ $config == "default" ]]; then
#     config=""
#   fi
#   NVIM_APPNAME=$config nvim $@
# }
#
# bindkey -s ^a "nvims\n"


################################################
######### Paths   ##############################
################################################
export PATH=~/bin:$PATH


################################################
# Fzf settings
################################################

# key-bindings and completions are not sourced by default
# you can also use ohmyzsh fzf plugin to avoid sourcing manually
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

# {{{ use fd instead of find command
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'

# To apply the command to CTRL-T and ALT-C as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d --strip-cwd-prefix --hidden --follow --exclude .git"
# }}}

# {{{ Use fd for **<Tab> fzf completion as well

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
# }}}

# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS="
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# Print tree structure in the preview window
export FZF_ALT_C_OPTS="--preview 'tree -C {}'"

################################################
######### aliases ##############################
################################################

alias v='nvim'

# chezmoi dotfiles manager
alias che="chezmoi"
alias "checd"="chezmoi-cd"

# now `cclip' can be used when you it to be available to `ctrl-[vxc]'
alias cclip='xclip -selection clipboard'

# tmuxp
# alias tp='tmuxp load -y $(tmuxp ls | fzf --border none)'
alias f='cd $(fd . ~ --type d --hidden --follow --exclude .git| fzf --border none)'
bindkey -s '^f' 'f\n '

# Not using spacevim
# alias svim='vim -u ~/.SpaceVim/vimrc'

alias chrome="google-chrome-stable"
alias open="xdg-open"

# Tmux aliases
# TODO ohmyzsh already provides tmux aliases
# Use the plugin in ohmyzsh
# alias t="tmux"
# alias ta="t a -t"
# alias tls="t ls"
# alias tn="t new -t"

alias c="clear"
#alias x="exit"

# I think this is to open previous session of vim
# Useful for using vim with tmux
alias vims="vim -S"

bindkey -s '^k' 'omnitmux.sh\n'

# this was dotfile management technique using bare git repository
# no longer requires as chezmoi is being used
# alias config='/usr/bin/git --git-dir=/home/saif/.cfg/ --work-tree=/home/saif'

# Command line alias to start the browser-sync server
# This is installed using npm globally
alias serve="browser-sync start --server --files ."

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
